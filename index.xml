<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EMBARK BEYOND</title><link>https://e-m-b-a.github.io/</link><description>Recent content on EMBARK BEYOND</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 24 Jan 2022 12:35:49 +0100</lastBuildDate><atom:link href="https://e-m-b-a.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello World from EMBA</title><link>https://e-m-b-a.github.io/posts/hello_world/</link><pubDate>Mon, 24 Jan 2022 12:35:49 +0100</pubDate><guid>https://e-m-b-a.github.io/posts/hello_world/</guid><description>Here is the EMBA team with a brand new blog around EMBA and EMBArk the firmware scanning environment.
In the near future you will find some blog posts on things we are working on and firmware security scanning in general. For now enjoy the EMBA video.
stay tuned &amp;hellip;</description></item><item><title>QNAP firmware extractor module - from 0 to full firmware analysis</title><link>https://e-m-b-a.github.io/posts/qnap_decryptor/</link><pubDate>Sun, 23 Jan 2022 15:21:53 +0100</pubDate><guid>https://e-m-b-a.github.io/posts/qnap_decryptor/</guid><description>On one of our last penetration tests we had a QNAP device in front of us. While we started investigating the device via the network, we also wanted to use our firmware scanner EMBA for the firmware analysis tasks. The firmware was available from the QNAP download site and starting EMBA with the default profile looks like a quick win. After a while we realised that EMBA was running into the deep-extraction mode and finally failed extracting the needed firmware.</description></item><item><title>EMBArk wiki content</title><link>https://e-m-b-a.github.io/wiki/embark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/embark/</guid><description>hello world
embark</description></item><item><title>OS-Support.md</title><link>https://e-m-b-a.github.io/wiki/embark/os-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/embark/os-support/</guid><description>Back to wiki menu
EMBArk is able to analyze different operating systems. The main focus is on Linux-based operating systems. Although EMBArk is also able to analyze the following operating systems:
multiple Linux-based operating systems FreeBSD VxWorks FreeRTOS eCos yC/OS Adonis Siprotec (based on VxWorks) and others Back to wiki menu</description></item><item><title>OS-support.md</title><link>https://e-m-b-a.github.io/wiki/emba/os-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/os-support/</guid><description>Back to wiki menu
EMBA is able to analyze different operating systems. The main focus is on Linux-based operating systems. Although EMBA is also able to identify and analyze the following operating systems:
multiple Linux-based operating systems FreeBSD VxWorks FreeRTOS eCos yC/OS Adonis Siprotec (based on VxWorks) QNX and others Back to wiki menu</description></item><item><title>Overview emba Wiki</title><link>https://e-m-b-a.github.io/wiki/emba/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/</guid><description>hello world
see here emba wiki content</description></item><item><title>Overview Wiki</title><link>https://e-m-b-a.github.io/wiki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/</guid><description>hello world
see here both wikis with their respective logos</description></item><item><title>Referring-sites.md</title><link>https://e-m-b-a.github.io/wiki/emba/referring-sites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/referring-sites/</guid><description>Back to wiki menu
https://www.kitploit.com/2021/01/emba-analyzer-for-linux-based-firmware.html https://securityonline.info/emba-analyzer-for-linux-based-firmware-of-embedded-devices/ https://cert.bournemouth.ac.uk/emba-an-analyzer-for-linux-based-firmware-of-embedded-devices/ https://p4cx.medium.com/emba-b370ce503602 https://www.libhunt.com/t/embedded-linux https://www.youtube.com/watch?v=8FeSpuRXvYA https://github.com/fkie-cad/awesome-embedded-and-iot-security https://project-awesome.org/fkie-cad/awesome-embedded-and-iot-security https://pythonawesome.com/embark-the-firmware-security-scanning-environment/ https://github.com/V33RU/IoTSecurity101#Pentesting-Firmwares-and-emulating-and-analyzing Back to wiki menu</description></item><item><title>Systemmode-Emulator.md</title><link>https://e-m-b-a.github.io/wiki/emba/systemmode-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/systemmode-emulator/</guid><description>Back to wiki menu
Warning: Currently this is an experimental module, and you need to activate it manually with the -Q switch. ~Additionally it is only supported in developer mode (-D switch).~
Warning: EMBA needs root privileges for running in emulation mode.
Idea and history Starting with this Pull request EMBA got basic integration of the great firmadyne framework.
Firmware running in system mode emulation The following firmware images are tested in EMBA with full system emulation.</description></item><item><title>Usage.md</title><link>https://e-m-b-a.github.io/wiki/emba/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/usage/</guid><description>Back to wiki menu
Classic Before running EMBA make sure that you have installed all dependencies.
Static firmware testing Execute EMBA with set parameters, e.g. sudo ./emba.sh -l ./log -f ./firmware Path for logs and firmware path are necessary for testing a firmware image. You can specify multiple arguments. Test kernel config Test only a kernel configuration with the kernel checker of checksec: sudo ./emba.sh -l .</description></item><item><title>Usermode-Emulator.md</title><link>https://e-m-b-a.github.io/wiki/emba/usermode-emulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://e-m-b-a.github.io/wiki/emba/usermode-emulator/</guid><description>Back to wiki menu
Warning: Currently this is an experimental module, and you need to activate it manually with the -E switch.
Warning: EMBA needs root privileges for running in emulation mode.
The idea behind the emulator is to run the identified binaries with different command line options like -V, -v, --version, --help in a simple chroot environment. After the identification of the binary architecture, it is possible to choose the correct qemu emulator.</description></item></channel></rss>